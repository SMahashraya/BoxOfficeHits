import csv, json

f = open( 'db/movies.csv', 'r')
reader = csv.DictReader( f, fieldnames = ("close","movie_title","opening_theaters","opening_day_date",
"opening_gross_amount","rank","studio","total_theaters","total_gross","year",
"title","rated","released","runtime_in_min","genre","director","writer","actors",
"plot","language","country","awards","poster","ratings","metascore","imdbrating",
"imdbvotes","imdbid","dvd","boxoffice","production","website","action","adventure",
"animation","biography","comedy","crime","documentary","drama","family","fantasy",
"film_noir","history","horror","music","musical","mystery","romance","sci-fi","short",
"sport","superhero","thriller","war","western","actors_avg_total_gross",
"actors_avg_number_of_movies","actors_avg_best_picture_gross","director_total_gross",
"director_number_of_movies","director_best_picture_gross","title_negative_sentiment",
"title_neutral_sentiment","title_positive_sentiment","title_compound_sentiment",
"poster_color","black","white","gray","red","yellow","green","cyan","blue","magenta",
"rotten_tomatoes_score"))

store = []
framenames = []

for row in reader: 
    frame = {"Closing Date": ["close"],
            "Opening Theaters Played": ["opening_theaters"],
            "Opening Date": ["opening_day_date"],
            "Opening Gross": ["opening_gross_amount"],
            "Rank": ["rank"],
            "Studio": ["studio"],
            "Total Theaters Played": ["total_theaters"],
            "Total Gross": ["total_gross"],
            "Year": ["year"],
            "Rated": ["rated"],
            "Released": ["released"],
            "Runtime in Minutes": ["runtime_in_min"],
            "Genre": ["genre"],
            "Director": ["director"],
            "Writer": ["writer"],
            "Actors": ["actors"],
            "Plot": ["plot"],
            "Language": ["language"],
            "Country": ["country"],
            "Awards": ["awards"],
            "Poster": ["poster"],
            "Ratings": ["ratings"],
            "Metascore": ["metascore"],
            "IMDb Rating": ["imdbrating"],
            "IMDb Vote Total": ["imdbvotes"],
            "IMDb ID": ["imdbid"],
            "Released to DVD": ["dvd"],
            "Box Office": ["boxoffice"],
            "Production": ["production"],
            "Website": ["website"],
            "Action": ["action"],
            "Adventure": ["adventure"],
            "Animation": ["animation"],
            "Biography": ["biography"],
            "Comedy": ["comedy"],
            "Crime": ["crime"],
            "Documentary": ["documentary"],
            "Drama": ["drama"],
            "Family": ["family"],
            "Fantasy": ["fantasy"],
            "Film Noir": ["film_noir"],
            "History": ["history"],
            "Horror": ["horror"],
            "Music": ["music"],
            "Musical": ["musical"],
            "Mystery": ["mystery"],
            "Romance": ["romance"],
            "Sci-Fi": ["sci-fi"],
            "Short": ["short"],
            "Sport": ["sport"],
            "Superhero": ["superhero"],
            "Thriller": ["thriller"],
            "War": ["war"],
            "Western": ["western"],
            "Actors Average Gross": ["actors_avg_total_gross"],
            "Actors Average Number of Movies": ["actors_avg_number_of_movies"],
            "Actors Average Best Picture Gross": ["actors_avg_best_picture_gross"],
            "Director Total Gross": ["director_total_gross"],
            "Director Number of Movies": ["director_number_of_movies"],
            "Director Best Picture Gross": ["director_best_picture_gross"],
            "Title Negative Sentiment": ["title_negative_sentiment"],
            "Title Neutral Sentiment": ["title_neutral_sentiment"],
            "Title Positive Sentiment": ["title_positive_sentiment"],
            "Title Compound Sentiment": ["title_compound_sentiment"],
            "Poster Color": ["poster_color"],
            "Black": ["black"],
            "White": ["white"],
            "Gray": ["gray"],
            "Red": ["red"],
            "Yellow": ["yellow"],
            "Green": ["green"],
            "Cyan": ["cyan"],
            "Blue": ["blue"],
            "Magenta": ["magenta"],
            "Rotten Tomatoes Score": ["rotten_tomatoes_score"]}

    if row["movie_title"] not in framenames:
        framenames.append(row["movie_title"])
        store.append(frame)

f = open( 'movies.json', 'w')

out = json.dumps(store, indent = 4)
f.write(out)